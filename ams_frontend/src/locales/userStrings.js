const userStrings = {
  user: {
    title: "User Registration",
    breadcrumb: {
      dashboard: "Dashboard",
      registration: "User Registration",
    },
    buttons: {
      blukUsersCreate: "CreateBlukUsers",
      addUser: "Create User",
      previous: "Previous",
      next: "Next",
      no: "No",
      yes: "Yes",
      ok: "OK",
      deleting: "Deleting...",
      close: "Close",
    },
    table: {
      showEntries: "Show",
      entries: "Entries",
      noData: "No users found",
      headers: {
        userName: "User Name",
        phone: "Phone",
        email: "Email",
        status: "Status",
        userRole: "User Role",
        organizationName: "OrganizationName",
        branchName: "Branch Name",
        departmentName: "Department Name",
        action: "Action",
        deleteAll: "Delete All",
      },
      searchPlaceholders: {
        userName: "Search by name",
        phone: "Search by phone",
        email: "Search by email",
        status: "Search by status",
        userRole: "Search by role",
        organizationName: "OrganizationName",
        branchName: "Search by branch",
        departmentName: "Search by department",
      },
    },
    notAvailable: {
      emptyText: "N/A",
    },
    modals: {
      processingExcel: "Processing Excel File",
      doNotCloseWindow:
        "Please wait while we process your file. Do not close or refresh the window.",
      status: "Status",
      duplicateEntries: "The following users have duplicate entries:",
      rowEntry: "Row {row}: {error}",
      successCount: "Successfully created: {count} users",
      internalError:
        "An internal server error occurred. Please try again later.",
      deleteConfirmation: {
        single: "Are you sure you want to delete this user?",
        multiple: "Are you sure you want to delete {count} selected users?",
      },
      deleteSuccess: {
        single: "User deleted successfully!",
        multiple: "{count} users deleted successfully!",
      },
      selectFirst: "Please select at least one user to delete!",
    },
  },
  addUser: {
    title: "Add User",
    formLabels: {
      userName: "User Name",
      phone: "Contact Number",
      email: "Email ID",
      password: "Password",
      organization: "Select Organization",
      branch: "Select Branch",
      department: "Select Department",
      role: "Role",
      status: "Status",
    },
    placeholders: {
      userName: "Enter user name",
      phone: "Enter contact number",
      email: "Enter email ID",
      password: "Enter password",
      code: "Enter user code",
    },
    validation: {
      userNameRequired: "User name is required",
      userNameMinLength: "User Name   must be at least 3 characters long",
      userNameMaxLength: "User Name  must be at most 25 characters long",
      phoneRequired: "Contact number is required",
      phoneMinLength: "Phone   must be at least 7 Numbers long",
      phoneMaxLength: "Phone  must be at most 10 Numbers long",
      phoneInvalid: "Invalid phone number format (should be 10 digits)",
      emailRequired: "Email ID is required",
      emailInvalid: "Invalid email format",
      passwordRequired: "Password is required",
      passwordMinLength: "Password must be at least 8 characters",
      codeRequired: "User code is required",
      organizationRequired: "Please select an organization",
      branchRequired: "Please select a branch",
      departmentRequired: "Please select a department",
      roleRequired: "Please select a role",
      statusRequired: "Status is required",
    },
    select: {
      organizationDefault: "Select Organization",
      branchDefault: "Select Branch",
      departmentDefault: "Select Department",
      roleDefault: "Select Role",
      statusActive: "ACTIVE",
      statusInactive: "IN_ACTIVE",
      loadingBranches: "Loading branches...",
      loadingDepartments: "Loading departments...",
    },
    buttons: {
      close: "Close",
      save: "Save",
      saving: "Saving...",
    },
    toast: {
      success: "User added successfully!",
      error: "Failed to add user",
      branchError: "Error loading branches",
      departmentError: "Error loading departments",
      emailTaken: "Email already exists",
      phoneTaken: "Phone already exists",
    },
  },

  updateUser: {
    title: "Edit User",
    formLabels: {
      userName: "User Name",
      phone: "Phone Number",
      email: "Email Address",
      userRole: "User Role",
      organization: "Organization",
      branch: "Branch",
      department: "Department",
      OrganizationName: "organizationName",
      status: "Status",
    },
    validation: {
      userNameRequired: "User name is required",
      userNameMinLength: "User Name   must be at least 3 characters long",
      userNameMaxLength: "User Name  must be at most 25 characters long",
      phoneRequired: "Phone number is required",
      phoneInvalid: "Phone number must be 10 digits",
      phoneMinLength: "Phone   must be at least 7 Numbers long",
      phoneMaxLength: "Phone  must be at most 10 Numbers long",
      emailRequired: "Email address is required",
      emailInvalid: "Invalid email address format",
      userRoleRequired: "User role is required",
      organizationRequired: "Organization selection is required",
      branchRequired: "Branch selection is required",
      departmentRequired: "Department selection is required",
      statusRequired: "Please select a status",
    },
    select: {
      organizationDefault: "Select organization",
      branchDefault: "Select branch",
      departmentDefault: "Select department",
      loadingBranches: "Loading branches...",
      loadingDepartments: "Loading departments...",
      roleDefault: "Select Role",
      statusDefault: "Select status",
      statusActive: "ACTIVE",
      statusInactive: "IN_ACTIVE",
    },
    buttons: {
      close: "Close",
      updating: "Updating...",
      update: "Update",
    },
    toast: {
      success: "User updated successfully!",
      error: "Failed to update user",
      emailTaken: "Email already taken",
      phoneTaken: "Phone already taken",
      branchError: "Failed to fetch branches",
      departmentError: "Failed to fetch departments",
    },
  },
};

export default userStrings;
