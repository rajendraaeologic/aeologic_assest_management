generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPERADMIN
  ADMIN
  MANAGER
  USER
}

enum UserStatus {
  ACTIVE
  IN_ACTIVE
}

enum AssetStatus {
  UNASSIGNED
  ASSIGNED
  IN_USE
  LOST
  DAMAGED
  IN_REPAIR
  UNDER_MAINTENANCE
  RETIRED
  DISPOSED
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

type FileDetails {
  relativePath String?
  originalName String?
  mimeType     String?
}

model Token {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @db.ObjectId
}

model UserNotification {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  data      Json?
  message   String
  hasRead   Boolean   @default(false)
  userId    String    @db.ObjectId
  User      User      @relation(fields: [userId], references: [id], onUpdate: NoAction, onDelete: Cascade)
  readAt    DateTime?
  createdAt DateTime  @default(now())
}

model Organization {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  organizationName String
  branches         Branch[]
  users            User[]
  assets           Asset[]
  deleted          Boolean   @default(false)
  deletedAt      DateTime @default(now())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now()) @updatedAt
}

model Branch {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  branchName     String
  branchLocation String
  companyId      String       @db.ObjectId
  company        Organization @relation(fields: [companyId], references: [id])
  assets         Asset[]
  users          User[]
  deleted        Boolean      @default(false)
  deletedAt      DateTime @default(now())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  departments    Department[]
}

model Department {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  departmentName String
  branchId       String    @db.ObjectId
  branch         Branch    @relation(fields: [branchId], references: [id])
  users          User[]
  deleted        Boolean   @default(false)
  deletedAt      DateTime @default(now())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
  Asset          Asset[]
}

model User {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  userName         String?
  phone            String             @unique
  ISDCode          String             @default("91")
  email            String?
  image            String?
  password         String
  userRole         UserRole           @default(USER)
  status           UserStatus         @default(ACTIVE)
  isEmailVerified  Boolean            @default(false)
  Token            Token[]
  assignedAssets   Asset[]
  deleted          Boolean            @default(false)
  deletedAt      DateTime @default(now())
  UserNotification UserNotification[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
  branchId         String?            @db.ObjectId
  branch           Branch?            @relation(fields: [branchId], references: [id])
  AssetAssignment  AssetAssignment[]
  AssetHistory     AssetHistory[]
  departmentId     String?            @db.ObjectId
  department       Department?        @relation(fields: [departmentId], references: [id])
  companyId        String             @db.ObjectId
  company          Organization       @relation(fields: [companyId], references: [id])
}

model Asset {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  assetName        String
  description      String?
  uniqueId         String            @unique
  brand            String?
  model            String?
  serialNumber     String?
  purchaseDate     DateTime?
  cost             Float?
  warrantyEndDate  DateTime?
  status           AssetStatus       @default(UNASSIGNED)
  assignedToUserId String?           @db.ObjectId
  assignedUser     User?             @relation(fields: [assignedToUserId], references: [id])
  assetHistory     AssetHistory[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  AssetAssignment  AssetAssignment[]
  branchId         String?           @db.ObjectId
  branch           Branch?           @relation(fields: [branchId], references: [id])
  departmentId     String?           @db.ObjectId
  deleted          Boolean           @default(false)
  deletedAt      DateTime @default(now())
  department       Department?       @relation(fields: [departmentId], references: [id])
  companyId        String            @db.ObjectId
  company          Organization      @relation(fields: [companyId], references: [id])
}

model AssetHistory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String    @db.ObjectId
  action    String
  deleted   Boolean   @default(false)
  deletedAt      DateTime @default(now())
  userId    String    @db.ObjectId
  timestamp DateTime  @default(now())
  asset     Asset?    @relation(fields: [assetId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model AssetReport {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  totalAssets Int
  totalValue  Float
  reportDate  DateTime  @default(now())
  deleted     Boolean   @default(false)
  deletedAt      DateTime @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model AssetAssignment {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  assetId    String      @db.ObjectId
  userId     String      @db.ObjectId
  deleted    Boolean     @default(false)
  deletedAt      DateTime @default(now())
  assignedAt DateTime    @default(now())
  status     AssetStatus @default(UNASSIGNED)
  asset      Asset       @relation(fields: [assetId], references: [id])
  user       User        @relation(fields: [userId], references: [id])
}
